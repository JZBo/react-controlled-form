// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rendering a Form component should initialize the form data 1`] = `
<Connect(Form)
  formId="name"
  initialFields={
    Object {
      "firstname": Object {
        "value": "John",
      },
      "lastname": Object {
        "value": "Doe",
      },
    }
  }
  render={[Function]}
>
  <Form
    data={
      Object {
        "firstname": Object {
          "value": "John",
        },
        "lastname": Object {
          "value": "Doe",
        },
      }
    }
    formId="name"
    initForm={[Function]}
    initialFields={
      Object {
        "firstname": Object {
          "value": "John",
        },
        "lastname": Object {
          "value": "Doe",
        },
      }
    }
    render={[Function]}
    resetForm={[Function]}
    state={Object {}}
    updateField={[Function]}
    updateState={[Function]}
  >
    <div>
      Hello 
      John
       
      Doe
    </div>
  </Form>
</Connect(Form)>
`;

exports[`Rendering a Form component should initialize the form data form inner fields 1`] = `
<Connect(Form)
  formId="name"
  render={[Function]}
>
  <Form
    data={
      Object {
        "firstname": Object {
          "isEnabled": true,
          "isRequired": false,
          "isTouched": false,
          "isValid": true,
          "value": "John",
        },
      }
    }
    formId="name"
    initForm={[Function]}
    render={[Function]}
    resetForm={[Function]}
    state={Object {}}
    updateField={[Function]}
    updateState={[Function]}
  >
    <div>
      Hello 
      John
      .
      <getContext(Connect(Field))
        fieldId="firstname"
        initialData={
          Object {
            "value": "John",
          }
        }
        render={[Function]}
      >
        <Connect(Field)
          fieldId="firstname"
          formId="name"
          initialData={
            Object {
              "value": "John",
            }
          }
          render={[Function]}
          subscribeToReinit={[Function]}
        >
          <Field
            data={
              Object {
                "isEnabled": true,
                "isRequired": false,
                "isTouched": false,
                "isValid": true,
                "value": "John",
              }
            }
            fieldId="firstname"
            formId="name"
            initField={[Function]}
            initialData={
              Object {
                "value": "John",
              }
            }
            render={[Function]}
            state={Object {}}
            subscribeToReinit={[Function]}
            updateField={[Function]}
            updateState={[Function]}
          >
            <input
              value="John"
            />
          </Field>
        </Connect(Field)>
      </getContext(Connect(Field))>
    </div>
  </Form>
</Connect(Form)>
`;
